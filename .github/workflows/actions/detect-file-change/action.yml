name: Detect File Changes
description: Detects changed files between releases or commits and outputs them.

inputs:
  watched_path:
    description: "Optional file or directory to monitor (empty = any change)"
    required: false
    default: ''
outputs:
  found:
    description: "true if watched path changed"
  files:
    description: "list of changed files"

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Detect changed files
      id: check
      shell: bash
      run: |
        set -e
        echo "üîç Detecting changed files..."
        WATCHED_PATH="${{ inputs.watched_path }}"

        if [ "${GITHUB_EVENT_NAME}" = "release" ]; then
          AFTER_TAG="${{ github.event.release.tag_name }}"
          git fetch --tags --quiet

          PREV_TAG=$(git tag --sort=-creatordate | awk -v tag="$AFTER_TAG" '
            { tags[++n]=$0 }
            END {
              for(i=1;i<=n;i++) if(tags[i]==tag) { if(i<n) print tags[i+1]; else print "" }
            }' || true)

          if [ -z "$PREV_TAG" ]; then
            CHANGED=$(git ls-tree -r --name-only "refs/tags/$AFTER_TAG")
          else
            CHANGED=$(git diff --name-only "refs/tags/$PREV_TAG" "refs/tags/$AFTER_TAG")
          fi
        else
          if [ -n "${{ github.event.before }}" ] && [ "${{ github.event.before }}" != "0000000000000000000000000000000000000000" ]; then
            CHANGED=$(git diff --name-only "${{ github.event.before }}" "${{ github.sha }}")
          else
            CHANGED=$(git diff --name-only HEAD~1 HEAD || true)
          fi
        fi

        echo "Changed files:"
        echo "$CHANGED" || true

        if [ -z "$CHANGED" ]; then
          echo "found=false" >> $GITHUB_OUTPUT
          exit 0
        fi

        if [ -z "$WATCHED_PATH" ]; then
          echo "found=true" >> $GITHUB_OUTPUT
          echo "files<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGED" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          exit 0
        fi

        if echo "$CHANGED" | grep -qF "$WATCHED_PATH"; then
          echo "found=true" >> $GITHUB_OUTPUT
          echo "files<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGED" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "found=false" >> $GITHUB_OUTPUT
        fi
