name: Branch naming

on:
  push:
    branches-ignore:
      - main
      - develop
  create:
    branches-ignore:
      - main
      - develop


jobs:
  branch-naming-rules:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Ensure branch is based on any remote branch
        run: |
          env:
           BRANCH_NAME: ${{ github.ref_name }}
          git fetch --all
          VALID_BASE=false
          for REMOTE_BRANCH in $(git branch -r | sed 's/origin\///'); do
            BASE=$(git merge-base HEAD "origin/$REMOTE_BRANCH" || true)
            if [ "$BASE" = "$(git rev-parse origin/$REMOTE_BRANCH)" ]; then
              VALID_BASE=true
              break
            fi
          done

          if [ "$VALID_BASE" = false ]; then
            echo "❌ Branch '$BRANCH_NAME' is not based on any remote branch."
            exit 1
          fi


      - name: Validate branch name on create
        if: github.event_name == 'create'
        run: |
          env:
           BRANCH_NAME: ${{ github.ref_name }}
          echo "Checking branch name: $BRANCH_NAME"
          if [[ ! "$BRANCH_NAME" =~ ^(hot-fix-)?[A-Z]{3}-[a-zA-Z0-9]+-ERP-[0-9]{5}$ ]]; then
            echo "❌ Invalid branch name: $BRANCH_NAME"
            exit 1
          fi

      - name: Validate branch name on push
        if: github.event_name == 'push'
        uses: deepakputhraya/action-branch-name@master
        with:
          regex: '^(hot-fix-)?[A-Z]{3}-[a-zA-Z0-9]+-ERP-[0-9]{5}$'
          min_length: 10
          max_length: 100

      - name: Extract Jira Ticket Key
        id: extract
        run: |
          env:
          BRANCH_NAME: ${{ github.ref_name }}
          echo "Branch: $BRANCH_NAME"
          TICKET=$(echo "$BRANCH_NAME" | grep -oE '[A-Z]{2,}-[0-9]{5}')
          echo "Extracted ticket: $TICKET"
          echo "ticket=$TICKET" >> $GITHUB_OUTPUT

      - name: Validate Jira Ticket Exists
        run: |
             echo "Checking Jira ticket: ${{ steps.extract.outputs.ticket }}"
             RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" \
               -u "${{ secrets.JIRA_USER }}:${{ secrets.JIRA_API_TOKEN }}" \
               -X GET \
               -H "Accept: application/json" \
               "${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/${{ steps.extract.outputs.ticket }}")
   
             if [ "$RESPONSE" -ne 200 ]; then
               echo "❌ Jira ticket not found: ${{ steps.extract.outputs.ticket }}"
               exit 1
             else
               echo "✅ Jira ticket exists: ${{ steps.extract.outputs.ticket }}"
   

      - name: Comment on PR if branch name is invalid
        if: failure() && github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ⚠️ **Branch name does not follow the convention!**
            Please rename your branch to match one of the following formats:
            - `hot-fix/ABC-login-ERP-12345`
            - `ABC-login-ERP-12345`

